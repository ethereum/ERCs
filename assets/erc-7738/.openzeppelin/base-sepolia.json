{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x527E7E85cF60390b56bE953888e0cb036682761B",
      "txHash": "0xdb55d5d50e8978d47f8257c6f62208e3ac8e69ec5e3db5f14b34da1d157dfe77",
      "kind": "uups"
    },
    {
      "address": "0x276d7760fA6774E3AE8F8a7446B88fb2479D38aC",
      "txHash": "0xea209dd0094556d8734582a1ea3724e65217d5ef33e1544970da74066c6cbd2a",
      "kind": "uups"
    },
    {
      "address": "0x0077380bCDb2717C9640e892B9d5Ee02Bb5e0682",
      "txHash": "0x980217e57a48b2b7ec5168614e863becb90538d25b8755d1ec554798de4a1872",
      "kind": "uups"
    }
  ],
  "impls": {
    "6976a3a7f5f95ff4b660371e1b617e7472a0e7402c4a750cac2fb1c2bf2f1031": {
      "address": "0xaB324d7D9f6e358DCc4315DA6Fad7d96870e46f5",
      "txHash": "0xc0cf1daeebfecd232b925459947e1286a9ad9417f7115cd0a3b1374e5f639789",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_ensRegistry",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "ENSSubdomainAssigner",
            "src": "contracts\\ENSSubdomainAssigner.sol:62"
          },
          {
            "label": "_subHash",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32",
            "contract": "ENSSubdomainAssigner",
            "src": "contracts\\ENSSubdomainAssigner.sol:63"
          },
          {
            "label": "_registry",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "ENSSubdomainAssigner",
            "src": "contracts\\ENSSubdomainAssigner.sol:64"
          },
          {
            "label": "_resolver",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "ENSSubdomainAssigner",
            "src": "contracts\\ENSSubdomainAssigner.sol:66"
          },
          {
            "label": "_baseLabel",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage",
            "contract": "ENSSubdomainAssigner",
            "src": "contracts\\ENSSubdomainAssigner.sol:67"
          },
          {
            "label": "_baseLabelHash",
            "offset": 0,
            "slot": "5",
            "type": "t_bytes32",
            "contract": "ENSSubdomainAssigner",
            "src": "contracts\\ENSSubdomainAssigner.sol:68"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)80_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "82450eae77740386e27c23375aae19d015425721b7f7cadaafe65c9b8b8fbdda": {
      "address": "0x97b0341BEdbC521778B669550774691918202e65",
      "txHash": "0x46b4367294f68b15cd0bc6b07739ad111c739663ad8d7b072e66de05fc275148",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_baseName",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage",
            "contract": "RegistryMetadata",
            "src": "contracts\\RegistryMetadata.sol:42"
          },
          {
            "label": "_registry",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "RegistryMetadata",
            "src": "contracts\\RegistryMetadata.sol:44"
          },
          {
            "label": "_metadataElements",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_struct(MetadataElement)6434_storage)",
            "contract": "RegistryMetadata",
            "src": "contracts\\RegistryMetadata.sol:58"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)80_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_uint256,t_struct(MetadataElement)6434_storage)": {
            "label": "mapping(uint256 => struct RegistryMetadata.MetadataElement)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(MetadataElement)6434_storage": {
            "label": "struct RegistryMetadata.MetadataElement",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "iconURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "order",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "e94a60a661028dc32351fe88c4864061104210fa4cbc3a15cebf90ce026c1941": {
      "address": "0x30Af1aea43490e2F03d4d7eF3116b745D7D58c30",
      "txHash": "0xf8f6da59a54e9f0c35d0c2a909e0e9531bf9e793b9cfa67008e129ca80dbbfba",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_scriptElements",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(ScriptElement)5005_storage)",
            "contract": "DecentralisedRegistryNFT",
            "src": "contracts\\DecentralisedRegistryNFT.sol:37"
          },
          {
            "label": "_tokenEntries",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "DecentralisedRegistryNFT",
            "src": "contracts\\DecentralisedRegistryNFT.sol:38"
          },
          {
            "label": "_metadata",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "DecentralisedRegistryNFT",
            "src": "contracts\\DecentralisedRegistryNFT.sol:47"
          },
          {
            "label": "_ensAssigner",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "DecentralisedRegistryNFT",
            "src": "contracts\\DecentralisedRegistryNFT.sol:48"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)609_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)252_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)80_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ScriptElement)5005_storage)": {
            "label": "mapping(uint256 => struct DecentralisedRegistryNFT.ScriptElement)",
            "numberOfBytes": "32"
          },
          "t_struct(ScriptElement)5005_storage": {
            "label": "struct DecentralisedRegistryNFT.ScriptElement",
            "members": [
              {
                "label": "scriptURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "contractAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "e33c9fdceba3827b27fae91fdf3a39ba5714526e817f91d3e1a202205f892d93": {
      "address": "0xe26fB0FB58B29261844eC4899922625a378Cd8d5",
      "txHash": "0x0a08af8cd91d33cdcee25890db71191f988342805fd2d53cc8211682d2232ddb",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_ensRegistry",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "ENSSubdomainAssigner",
            "src": "contracts\\ENSSubdomainAssigner.sol:67"
          },
          {
            "label": "_subHash",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32",
            "contract": "ENSSubdomainAssigner",
            "src": "contracts\\ENSSubdomainAssigner.sol:68"
          },
          {
            "label": "_registry",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "ENSSubdomainAssigner",
            "src": "contracts\\ENSSubdomainAssigner.sol:69"
          },
          {
            "label": "_resolver",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "ENSSubdomainAssigner",
            "src": "contracts\\ENSSubdomainAssigner.sol:71"
          },
          {
            "label": "_baseLabel",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage",
            "contract": "ENSSubdomainAssigner",
            "src": "contracts\\ENSSubdomainAssigner.sol:72"
          },
          {
            "label": "_baseLabelHash",
            "offset": 0,
            "slot": "5",
            "type": "t_bytes32",
            "contract": "ENSSubdomainAssigner",
            "src": "contracts\\ENSSubdomainAssigner.sol:73"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)80_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "7287355083694f6c9c1564eaae4635966fabe56ac9dc98cb2583023a8369091c": {
      "address": "0x89965BFbed613F27A83AdEE340B095dEF9a9Dce7",
      "txHash": "0x5744e5ce7c6eb77e64673d604f8057fe8713feb6cfa539c7a6020a8533af3eaa",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_baseName",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage",
            "contract": "RegistryMetadata",
            "src": "contracts\\RegistryMetadata.sol:68"
          },
          {
            "label": "_registry",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "RegistryMetadata",
            "src": "contracts\\RegistryMetadata.sol:70"
          },
          {
            "label": "_metadataElements",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_struct(MetadataElement)6434_storage)",
            "contract": "RegistryMetadata",
            "src": "contracts\\RegistryMetadata.sol:84"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)80_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_uint256,t_struct(MetadataElement)6434_storage)": {
            "label": "mapping(uint256 => struct RegistryMetadata.MetadataElement)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(MetadataElement)6434_storage": {
            "label": "struct RegistryMetadata.MetadataElement",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "iconURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "order",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "7581ddbf3848dcd804312df209178b9db979baf3ee269312986bd58885b8fab3": {
      "address": "0xDCCf814D05c0ccd97C93386120C397542182529f",
      "txHash": "0x1ac9af70d7909d32bfebeac3a35488c342f623470ccb143ab20982da6883a3fc",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_baseName",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage",
            "contract": "RegistryMetadata",
            "src": "contracts\\RegistryMetadata.sol:68"
          },
          {
            "label": "_registry",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "RegistryMetadata",
            "src": "contracts\\RegistryMetadata.sol:70"
          },
          {
            "label": "_metadataElements",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_struct(MetadataElement)6434_storage)",
            "contract": "RegistryMetadata",
            "src": "contracts\\RegistryMetadata.sol:84"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)80_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_uint256,t_struct(MetadataElement)6434_storage)": {
            "label": "mapping(uint256 => struct RegistryMetadata.MetadataElement)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(MetadataElement)6434_storage": {
            "label": "struct RegistryMetadata.MetadataElement",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "iconURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "order",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
